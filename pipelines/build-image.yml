parameters:
- name: imageTag
  displayName: Image tag
  type: string
  default: latest
  
trigger: none

schedules:
- cron: '0 0 * * Thu'
  displayName: 'Daily build (0:00 UTC)'
  # Run if there are no changes
  always: 'true'
  branches:
    include:
    - main

variables:
- group: 'build-container-agent-image' # shared with deploy-container-agents.yml
# should contain 'containerRegistry' -> name of Container Registry Service Connection
- name: date
  value: $[format('{0:yyyyMMdd}', pipeline.startTime)]
- name: 'tags'
  value: latest
- name: 'agentImageName'
  value: pipelineagent/ubuntu-agent
- name: 'toolsImageName'
  value: pipelineagent/ubuntu
- name: 'toolsImageFQName'
  value: $(containerRegistry).azurecr.io/$(toolsImageName):$(Build.BuildId)
- name: 'imageTag'
  value: ${{ parameters.imageTag }}
- name: 'scriptDirectory'
  value: $(Build.SourcesDirectory)/scripts

jobs:
- job: build
  displayName: Build images
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: Docker@2
    displayName: Build tools image
    inputs:
      command: build
      containerRegistry: '$(containerRegistry)'
      Dockerfile: 'images/ubuntu/Dockerfile'
      repository: $(toolsImageName)
      tags: |
        $(imageTag)
        $(date)
        $(Build.BuildId)
        $(Build.SourceBranchName)

  - task: Docker@2
    displayName: Push tools image
    inputs:
      command: push
      containerRegistry: '$(containerRegistry)'
      repository: $(toolsImageName)
      tags: |
        $(imageTag)
        $(date)
        $(Build.BuildId)
        $(Build.SourceBranchName)

  - task: Docker@2
    displayName: Build agent image
    inputs:
      arguments: '--build-arg BASE_IMAGE=$(toolsImageFQName)'
      command: build
      containerRegistry: '$(containerRegistry)'
      Dockerfile: 'images/ubuntu-agent/Dockerfile'
      repository: $(agentImageName)
      tags: |
        $(imageTag)
        $(date)
        $(Build.SourceBranchName)

  - task: Docker@2
    displayName: Push agent image
    inputs:
      command: push
      containerRegistry: '$(containerRegistry)'
      repository: $(agentImageName)
      tags: |
        $(imageTag)
        $(date)
        $(Build.SourceBranchName)

# - job: test
#   dependsOn: build
#   displayName: Test tools image
#   pool:
#     vmImage: 'ubuntu-latest'
#   container:
#     image: $(toolsImageFQName)
#     endpoint: containerEndpoint
#     # endpoint: $(containerEndpoint)
#     # endpoint: ${{ variables.containerRegistry }}
#     # endpoint: $[ variables['containerRegistry'] ]

#   steps:
#   - bash: |
#       echo Hello from Ubuntu
#       lsb_release -d
#     displayName: 'Ubuntu info'
#   - pwsh: |
#       az -v
#     displayName: 'Azure CLI info'
#   - pwsh: |
#       Write-Host "`$PSVersionTable.OS"
#       $PSVersionTable.OS
#       Get-InstalledModule | Sort-Object -Property Name
#     displayName: 'PowerShell info'
#   - pwsh: |
#       terraform -v
#     displayName: 'Terraform info'

- template: image-info-template.yml
  parameters:
    name: test
    dependsOn: build